buildscript {
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.13.0'
        classpath 'com.google.gms:google-services:3.0.0'
        classpath 'com.jakewharton.hugo:hugo-plugin:1.2.1'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
        classpath 'io.fabric.tools:gradle:1.21.7'
        classpath 'me.tatarka:gradle-retrolambda:3.2.5'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.jakewharton.hugo'
//apply plugin: 'io.fabric' // TODO: uncomment when having set the Fabric API key
apply plugin: 'me.tatarka.retrolambda'

repositories {
    flatDir {
        dirs 'libs'
    }
    maven { url "https://jitpack.io" }
    maven { url 'https://maven.fabric.io/public' }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

def getSignInformation = { keystorePath, keystorePropertyPath ->
    def keyStore = file(keystorePath)
    if (!keyStore.exists()) {
        logger.error("Keystore file not found, path=${keyStore.absolutePath}")
        return
    }
    def propertiesFile = file(keystorePropertyPath)
    if (!propertiesFile.exists()) {
        logger.error("Keystore properties file not found, path=${propertiesFile.absolutePath}")
        return
    }
    def Properties properties = new Properties()
    properties.load(new FileInputStream(propertiesFile))
    return [
            storeFile    : keyStore,
            storePassword: properties["store_password"],
            keyAlias     : properties["key_alias"],
            keyPassword  : properties["key_password"]
    ]
}

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.2'
    defaultConfig {
        applicationId 'com.xmartlabs.template'
        minSdkVersion 17
        targetSdkVersion 25
        testInstrumentationRunner "${applicationId}.TestRunner"
        versionCode 1
        versionName '0.1.0'
    }
    signingConfigs {
        //noinspection GroovyMissingReturnStatement
        debug {
            def signInformation = getSignInformation("debug.keystore", "keystore.properties")
            if (signInformation != null) {
                storeFile signInformation.storeFile
                storePassword signInformation.storePassword
                keyAlias signInformation.keyAlias
                keyPassword signInformation.keyPassword
            }
        }
        //noinspection GroovyMissingReturnStatement
        release {
            def signInformation = getSignInformation("release.keystore", "keystore.properties")
            if (signInformation != null) {
                storeFile signInformation.storeFile
                storePassword signInformation.storePassword
                keyAlias signInformation.keyAlias
                keyPassword signInformation.keyPassword
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            //noinspection GrUnresolvedAccess
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            //noinspection GrUnresolvedAccess,GroovyAssignabilityCheck
            signingConfig signingConfigs.release
        }
    }
    flavorDimensions 'version', 'env'
    productFlavors {
        //noinspection GroovyMissingReturnStatement
        production {
            dimension 'env'
        }

        staging {
            dimension 'env'
            applicationIdSuffix '.staging'
        }

        lollipopAndAbove {
            dimension 'version'
            minSdkVersion 21 // For faster multidex compilation
        }

        allVersions {
            dimension 'version'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    //noinspection GroovyMissingReturnStatement
    lintOptions {
        disable 'InvalidPackage'
    }
    packagingOptions {
        exclude '.readme'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

final ANDROID_SUPPORT_VERSION = '25.3.0'
final ANDROID_SUPPORT_TEST_VERSION = '0.5'
final BULLET_VERSION = 'e5044b53df'
final BUTTER_KNIFE_VERSION = '8.2.1'
final DAGGER_VERSION = '2.6'
final DART_VERSION = '2.0.0'
final DEXMAKER_VERSION = '1.4'
final DB_FLOW_VERSION = '3.1.1'
final ESPRESSO_VERSION = '2.2.2'
final FIREBASE_VERSION = '9.2.1'
final FRAGMENT_ARGS_VERSION = '3.0.2'
final JSR305_VERSION = '3.0.1'
final LOCAL_DATE_BACKPORT_VERSION = '1.0.4'
final LOMBOK_VERSION = '1.16.16'
final MOCKITO_VERSION = '1.10.19'
final OK_HTTP_VERSION = '3.6.0'
final OKIO_VERSION = '1.11.0'
final PARCELER_VERSION = '1.1.5'
final REST_MOCK_VERSION = '0.1.3'
final RETROFIT_VERSION = '2.2.0'
final RX_ANDROID_VERSION = '2.0.1'
final RX_JAVA_VERSION = '2.0.7'
final RX_LIFECYCLE_VERSION = '2.0.1'
final STREAM_VERSION = '1.1.6'
final TIMBER_VERSION = '4.3.0'

dependencies {
    androidTestApt "com.github.tbroyer.bullet:bullet-compiler:${BULLET_VERSION}"
    androidTestApt "com.google.dagger:dagger-compiler:${DAGGER_VERSION}"
    androidTestCompile "com.android.support:support-annotations:${ANDROID_SUPPORT_VERSION}"
    androidTestCompile "com.android.support.test:rules:${ANDROID_SUPPORT_TEST_VERSION}"
    androidTestCompile("com.android.support.test:runner:${ANDROID_SUPPORT_TEST_VERSION}") {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile("com.android.support.test.espresso:espresso-contrib:${ESPRESSO_VERSION}") {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude module: 'recyclerview-v7'
    }
    androidTestCompile("com.android.support.test.espresso:espresso-core:${ESPRESSO_VERSION}") {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile "com.android.support.test.espresso:espresso-intents:${ESPRESSO_VERSION}"
    androidTestCompile "com.github.andrzejchm.RESTMock:android:${REST_MOCK_VERSION}"
    androidTestCompile("com.github.andrzejchm.RESTMock:core:${REST_MOCK_VERSION}") {
        exclude group: 'org.bouncycastle', module: 'bcprov-jdk15on'
    }
    androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.2'
    androidTestCompile "com.crittercism.dexmaker:dexmaker:${DEXMAKER_VERSION}"
    androidTestCompile "com.crittercism.dexmaker:dexmaker-dx:${DEXMAKER_VERSION}"
    androidTestCompile "com.crittercism.dexmaker:dexmaker-mockito:${DEXMAKER_VERSION}"
    androidTestCompile "com.google.code.findbugs:jsr305:${JSR305_VERSION}" // Added to prevent dependencies conflict between main and test
    androidTestCompile 'com.jakewharton.espresso:okhttp3-idling-resource:1.0.0'
    androidTestCompile "com.squareup.okhttp3:okhttp:${OK_HTTP_VERSION}" // Added to prevent dependencies conflict between main and test
    androidTestCompile "com.squareup.okhttp3:mockwebserver:${OK_HTTP_VERSION}" // Added to prevent dependencies conflict between main and test
    androidTestCompile "com.squareup.okio:okio:${OKIO_VERSION}" // Added to prevent dependencies conflict between main and test
    androidTestCompile "org.mockito:mockito-core:${MOCKITO_VERSION}"
    apt "com.f2prateek.dart:dart-processor:${DART_VERSION}"
    apt "com.f2prateek.dart:henson-processor:${DART_VERSION}"
    apt "com.github.Raizlabs.DBFlow:dbflow-processor:${DB_FLOW_VERSION}"
    apt "com.github.tbroyer.bullet:bullet-compiler:${BULLET_VERSION}"
    provided "com.google.dagger:dagger-compiler:${DAGGER_VERSION}"
    apt "com.hannesdorfmann.fragmentargs:processor:${FRAGMENT_ARGS_VERSION}"
    apt "com.jakewharton:butterknife-compiler:${BUTTER_KNIFE_VERSION}"
    //apt 'net.ltgt.dagger:bullet-compiler:1.0-SNAPSHOT' // Loaded from JitPack
    apt "org.parceler:parceler:${PARCELER_VERSION}"
    apt "org.projectlombok:lombok:${LOMBOK_VERSION}"
    compile "com.android.support:appcompat-v7:${ANDROID_SUPPORT_VERSION}"
    compile "com.android.support:cardview-v7:${ANDROID_SUPPORT_VERSION}"
    compile "com.android.support:design:${ANDROID_SUPPORT_VERSION}"
    compile "com.android.support:recyclerview-v7:${ANDROID_SUPPORT_VERSION}"
    compile "com.android.support:support-v13:${ANDROID_SUPPORT_VERSION}"
    compile "com.annimon:stream:${STREAM_VERSION}"
    compile('com.crashlytics.sdk.android:crashlytics:2.6.1@aar') {
        transitive = true
    }
    compile "com.f2prateek.dart:dart:${DART_VERSION}"
    compile "com.f2prateek.dart:henson:${DART_VERSION}"
    compile 'com.github.mrmike:Ok2Curl:0.2.5'
    compile "com.github.Raizlabs.DBFlow:dbflow-core:${DB_FLOW_VERSION}"
    compile "com.github.Raizlabs.DBFlow:dbflow:${DB_FLOW_VERSION}"
    compile 'com.github.square.picasso:picasso:8c16e8564e'
    compile "com.github.tbroyer.bullet:bullet:${BULLET_VERSION}"
    compile "com.google.dagger:dagger:${DAGGER_VERSION}"
    compile "com.google.firebase:firebase-core:${FIREBASE_VERSION}"
    compile "com.google.firebase:firebase-invites:${FIREBASE_VERSION}"
    compile "com.google.firebase:firebase-messaging:${FIREBASE_VERSION}"
    compile "com.hannesdorfmann.fragmentargs:annotation:${FRAGMENT_ARGS_VERSION}"
    compile "com.hannesdorfmann.fragmentargs:bundler-parceler:${FRAGMENT_ARGS_VERSION}"
    compile "com.jakewharton:butterknife:${BUTTER_KNIFE_VERSION}"
    compile "com.jakewharton.threetenabp:threetenabp:${LOCAL_DATE_BACKPORT_VERSION}"
    compile "com.jakewharton.timber:timber:${TIMBER_VERSION}"
    compile "com.squareup.okhttp3:okhttp:${OK_HTTP_VERSION}"
    compile "com.squareup.okhttp3:logging-interceptor:${OK_HTTP_VERSION}"
    compile "com.squareup.okio:okio:${OKIO_VERSION}"
    //compile 'com.squareup.picasso:picasso:2.5.2' // Loaded from JitPack in order to use OkHttp3
    compile "com.squareup.retrofit2:converter-gson:${RETROFIT_VERSION}"
    compile "com.squareup.retrofit2:adapter-rxjava2:${RETROFIT_VERSION}"
    compile "com.squareup.retrofit2:retrofit:${RETROFIT_VERSION}"
    compile "com.trello.rxlifecycle2:rxlifecycle:${RX_LIFECYCLE_VERSION}"
    compile "com.trello.rxlifecycle2:rxlifecycle-components:${RX_LIFECYCLE_VERSION}"
    compile 'com.viewpagerindicator:library:2.4.1@aar'
    compile 'com.wdullaer:materialdatetimepicker:2.5.0'
    compile "io.reactivex.rxjava2:rxandroid:${RX_ANDROID_VERSION}"
    compile "io.reactivex.rxjava2:rxjava:${RX_JAVA_VERSION}"
    //compile 'net.ltgt.dagger:bullet:1.0-SNAPSHOT' // Loaded from JitPack
    compile "org.parceler:parceler-api:${PARCELER_VERSION}"
    compile fileTree(include: ['*.jar'], dir: 'libs')
    provided "org.projectlombok:lombok:${LOMBOK_VERSION}"
    testCompile 'junit:junit:4.12'
    testCompile ('org.threeten:threetenbp:1.3.2') {
        exclude group:'com.jakewharton.threetenabp', module:'threetenabp'
    }
}

//apply plugin: 'com.google.gms.google-services' // TODO: enable when adding google-services.json

apply from: 'circleci.gradle'
